{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["styles","pagination","color","Pagination","props","className","sx","previous","frontmatter","template","to","slug","rel","title","next","Post","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","fluid","description","image","article","date","objectFit","objectPosition","alt","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,4FASMA,EAAS,CACb,qBAAsB,CACpB,mBAAoB,UAEtBC,WAAY,CACV,EAAK,CACHC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAa,SAACC,GAAD,OACjB,mBACEC,UAAU,mBACVC,GAAIN,EAAOC,YAEX,sBACMG,EAAMG,UAAoD,cAAxCH,EAAMG,SAASC,YAAYC,UAC7C,sBACI,YAAC,OAAD,CAAMC,GAAIN,EAAMG,SAASC,YAAYG,KAAMC,IAAI,QAC7C,iBACEN,GAAI,CACFJ,MAAO,UAGT,oBAAMG,UAAU,cAAa,YAAC,IAAD,OAL/B,aAMA,oBAAMA,UAAU,cAAcD,EAAMG,SAASC,YAAYK,SAI/DT,EAAMU,MAA4C,cAApCV,EAAMU,KAAKN,YAAYC,UACrC,sBACE,YAAC,OAAD,CAAMC,GAAIN,EAAMU,KAAKN,YAAYG,KAAMC,IAAI,QACzC,iBACEN,GAAI,CACFJ,MAAO,UAFX,QAIM,oBAAMG,UAAU,eAAc,YAAC,IAAD,QACpC,oBAAMA,UAAU,cAAcD,EAAMU,KAAKN,YAAYK,YAwDpDE,UAhDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAmBF,EAAnBE,eACAV,EAA+BU,EAA/BV,YAAaW,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACrBC,EAAQb,EAAYc,cAAgBd,EAAYc,cAAcC,gBAAgBC,MAAQ,GACpFjB,EAAmBU,EAAnBV,SAAUO,EAASG,EAATH,KAEdV,EAAQ,CACVG,WACAO,QAGF,OACE,YAAC,IAAD,CAAQT,UAAU,QAChB,YAAC,IAAD,CACEQ,MAAOL,EAAYK,MACnBY,YAAajB,EAAYiB,YAAcjB,EAAYiB,YAAcL,EACjEM,MAAOL,EACPM,SAAS,IAEX,uBAAStB,UAAU,aACjB,sBAAQA,UAAU,mBAChB,uBAASA,UAAU,kBACjB,sBAAKG,EAAYK,OACjB,wBAAOL,EAAYoB,OAEpBP,EACC,YAAC,IAAD,CACEG,MAAOH,EACPQ,UAAU,QACVC,eAAe,UACfC,IAAKvB,EAAYK,MAAQ,oBACzBR,UAAU,mBAEV,IAGN,mBACEA,UAAU,oBACV2B,wBAAyB,CAAEC,OAAQd,OAGrCZ,GAAYO,IACZ,YAACX,EAAeC","file":"component---src-templates-blog-post-js-c59016d95bb3ecfc0a1c.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from '../components/seo';\r\n\r\nconst styles = {\r\n  'article blockquote': {\r\n    'background-color': 'cardBg'\r\n  },\r\n  pagination: {\r\n    'a': {\r\n      color: 'muted',\r\n      '&.is-active': {\r\n        color: 'text'\r\n      },\r\n      '&:hover': {\r\n        color: 'text'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Pagination = (props) => (\r\n  <div \r\n    className=\"pagination -post\"\r\n    sx={styles.pagination}\r\n  >\r\n    <ul>\r\n        {(props.previous && props.previous.frontmatter.template === 'blog-post') && (\r\n          <li>\r\n              <Link to={props.previous.frontmatter.slug} rel=\"prev\">\r\n                <p\r\n                  sx={{\r\n                    color: 'muted'\r\n                  }}\r\n                >\r\n                  <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous</p>\r\n                <span className=\"page-title\">{props.previous.frontmatter.title}</span>\r\n              </Link>\r\n          </li>\r\n        )}\r\n        {(props.next && props.next.frontmatter.template === 'blog-post') && (\r\n          <li>\r\n            <Link to={props.next.frontmatter.slug} rel=\"next\">\r\n              <p\r\n                sx={{\r\n                  color: 'muted'\r\n                }}\r\n              >Next <span className=\"icon -right\"><RiArrowRightLine/></span></p>\r\n              <span className=\"page-title\">{props.next.frontmatter.title}</span>\r\n            </Link>\r\n          </li>\r\n        )}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html, excerpt } = markdownRemark\r\n  const Image = frontmatter.featuredImage ? frontmatter.featuredImage.childImageSharp.fluid : \"\"\r\n  const { previous, next } = pageContext\r\n\r\n  let props = {\r\n    previous,\r\n    next\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"page\">\r\n      <SEO\r\n        title={frontmatter.title}\r\n        description={frontmatter.description ? frontmatter.description : excerpt}\r\n        image={Image}\r\n        article={true}\r\n      />\r\n      <article className=\"blog-post\">\r\n        <header className=\"featured-banner\">\r\n          <section className=\"article-header\">\r\n            <h1>{frontmatter.title}</h1>\r\n            <time>{frontmatter.date}</time>\r\n          </section>\r\n          {Image ? (\r\n            <Img \r\n              fluid={Image} \r\n              objectFit=\"cover\"\r\n              objectPosition=\"50% 50%\"\r\n              alt={frontmatter.title + ' - Featured image'}\r\n              className=\"featured-image\"\r\n            />\r\n          ) : \"\"}\r\n        </header>\r\n        \r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      </article>\r\n      {(previous || next) && (\r\n        <Pagination {...props} />\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($id: String!) {\r\n    markdownRemark( \r\n      id: { eq: $id }\r\n    ) {\r\n      id\r\n      html\r\n      excerpt(pruneLength: 148)\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n        description\r\n        featuredImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1980, maxHeight: 968, quality: 80, srcSetBreakpoints: [350, 700, 1050, 1400]) {\r\n              ...GatsbyImageSharpFluid\r\n              ...GatsbyImageSharpFluidLimitPresentationSize\r\n            }\r\n            sizes {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}