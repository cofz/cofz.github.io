{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/post-card.js"],"names":["styles","pagination","color","Pagination","props","className","sx","isFirst","to","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","data","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","id","title","description","React","Component","PostCard","bg","featuredImage","slug","fluid","childImageSharp","objectFit","objectPosition","alt","class","variant"],"mappings":"gNAUMA,EAAS,CACbC,WAAY,CACV,EAAK,CACHC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAoCTC,EAAa,SAACC,GAAD,OACjB,mBACEC,UAAU,aACVC,GAAIN,EAAOC,YAEX,uBACIG,EAAMG,SACN,sBACE,YAAC,OAAD,CAAMC,GAAIJ,EAAMK,SAAUC,IAAI,QAC9B,oBAAML,UAAU,cAAa,YAAC,IAAD,OAD7B,cAKHM,MAAMC,KAAK,CAAEC,OAAQT,EAAMU,WAAY,SAACC,EAAGC,GAAJ,OACtC,kBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,YAAC,OAAD,CACER,GAAE,GAAKJ,EAAMc,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3CX,UAAWD,EAAMe,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITZ,EAAMgB,QACN,sBACE,YAAC,OAAD,CAAMZ,GAAIJ,EAAMiB,SAAUX,IAAI,QAA9B,QACO,oBAAML,UAAU,eAAc,YAAC,IAAD,YAOzCiB,E,kGACJC,OAAA,WAAU,IAEAC,EAASC,KAAKrB,MAAdoB,KAFD,EAG2BC,KAAKrB,MAAMsB,YAArCP,EAHD,EAGCA,YAAaL,EAHd,EAGcA,SAEfP,EAA0B,IAAhBY,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAHpB,mBAG+CA,EAAc,GAAGQ,WAC3EN,EAJW,UAIYF,EAAc,GAAGQ,WAExCC,EAAQJ,EAAKK,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OACP,YAAC,IAAD,CAAUf,IAAKe,EAAKC,KAAKI,GAAIb,KAAMQ,EAAKC,UAExC7B,EAAQ,CACVG,UACAE,WACAK,WACAI,SAfe,SAgBfC,cACAC,SACAC,YAGF,OACE,YAAC,IAAD,CAAQhB,UAAU,aAChB,YAAC,IAAD,CACEiC,MAAO,eAAiBnB,EAAc,OAASL,EAC/CyB,YAAa,4BAA8BpB,EAAc,OAASL,IAEpE,yCACA,mBAAKT,UAAU,yBACZuB,GAEH,YAACzB,EAAeC,K,GApCAoC,IAAMC,WA0CfnB,a,kCCjIf,iDAgDeoB,IA3CE,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OACf,uBACEnB,UAAU,YACVC,GAAI,CACFqC,GAAI,WAGLnB,EAAKU,YAAYU,cAEd,YAAC,OAAD,CAAMpC,GAAIgB,EAAKU,YAAYW,MACzB,YAAC,IAAD,CACEC,MAAOtB,EAAKU,YAAYU,cAAcG,gBAAgBD,MACtDE,UAAU,QACVC,eAAe,UACfC,IAAK1B,EAAKU,YAAYI,MAAQ,oBAC9BjC,UAAU,oBAGZ,GAEN,mBAAK8C,MAAM,gBACT,kBAAI9C,UAAU,SACZ,YAAC,OAAD,CACEG,GAAIgB,EAAKU,YAAYW,KACrBvC,GAAI,CACF8C,QAAS,mBAGV5B,EAAKU,YAAYI,QAGtB,iBACEjC,UAAU,OACVC,GAAI,CACFJ,MAAO,UAGT,wBAAOsB,EAAKU,YAAYC","file":"component---src-templates-blog-list-js-42ebc1b3d8f326eef55b.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport React from 'react'\r\nimport { Link , graphql } from \"gatsby\"\r\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport PostCard from \"../components/post-card\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst styles = {\r\n  pagination: {\r\n    'a': {\r\n      color: 'muted',\r\n      '&.is-active': {\r\n        color: 'text'\r\n      },\r\n      '&:hover': {\r\n        color: 'text'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\r\n      limit: $limit\r\n      skip: $skip\r\n\t\t) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            slug\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tfeaturedImage {\r\n\t\t\t\t\t\t\tchildImageSharp {\r\n\t\t\t\t\t\t\t\tfluid(maxWidth: 540, maxHeight: 360, quality: 80) {\r\n                  ...GatsbyImageSharpFluid\r\n                  ...GatsbyImageSharpFluidLimitPresentationSize\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Pagination = (props) => (\r\n  <div \r\n    className=\"pagination\"\r\n    sx={styles.pagination}\r\n  >\r\n    <ul>\r\n      {!props.isFirst && (\r\n        <li>\r\n          <Link to={props.prevPage} rel=\"prev\">\r\n          <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous\r\n          </Link>\r\n        </li>\r\n      )}\r\n      {Array.from({ length: props.numPages }, (_, i) => (\r\n        <li key={`pagination-number${i + 1}`} >\r\n          <Link\r\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\r\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\r\n          >\r\n            {i + 1}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n      {!props.isLast && (\r\n        <li>\r\n          <Link to={props.nextPage} rel=\"next\">\r\n            Next <span className=\"icon -right\"><RiArrowRightLine/></span>\r\n          </Link>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n)\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    \r\n    const { data } = this.props\r\n    const { currentPage, numPages } = this.props.pageContext\r\n    const blogSlug = '/blog/' \r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\r\n    const nextPage = blogSlug + (currentPage + 1).toString()\r\n\r\n    const posts = data.allMarkdownRemark.edges\r\n      .filter(edge => !!edge.node.frontmatter.date)\r\n      .map(edge =>\r\n        <PostCard key={edge.node.id} data={edge.node} />\r\n      )\r\n    let props = {\r\n      isFirst,\r\n      prevPage,\r\n      numPages,\r\n      blogSlug,\r\n      currentPage,\r\n      isLast,\r\n      nextPage\r\n    }\r\n    \r\n    return (\r\n      <Layout className=\"blog-page\">\r\n        <SEO\r\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\r\n          description={\"Stackrole base blog page \" + currentPage + \" of \" + numPages }\r\n        />\r\n        <h1>Sample Projects</h1>\r\n        <div className=\"grids col-1 sm-2 lg-3\">\r\n          {posts}\r\n        </div>\r\n        <Pagination {...props} />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex","/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nconst PostCard = ({ data }) => (\r\n  <article \r\n    className=\"post-card\"\r\n    sx={{\r\n      bg: 'cardBg'\r\n    }}\r\n  >\r\n    {data.frontmatter.featuredImage ? \r\n      (\r\n        <Link to={data.frontmatter.slug}>\r\n          <Img \r\n            fluid={data.frontmatter.featuredImage.childImageSharp.fluid} \r\n            objectFit=\"cover\"\r\n            objectPosition=\"50% 50%\"\r\n            alt={data.frontmatter.title + ' - Featured image'}\r\n            className=\"featured-image\"\r\n          />\r\n        </Link>\r\n      ) : \"\"\r\n    }\r\n    <div class=\"post-content\">\r\n      <h2 className=\"title\">\r\n        <Link \r\n          to={data.frontmatter.slug}\r\n          sx={{\r\n            variant: 'links.postLink'\r\n          }}\r\n        >\r\n          {data.frontmatter.title}\r\n        </Link>\r\n      </h2>\r\n      <p \r\n        className=\"meta\"\r\n        sx={{\r\n          color: 'muted',\r\n        }}\r\n      >\r\n        <time>{data.frontmatter.date}</time>\r\n      </p>\r\n    </div>\r\n  </article>\r\n)\r\n\r\nexport default PostCard"],"sourceRoot":""}